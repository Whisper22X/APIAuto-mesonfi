{"uid":"9ddde7a6dcf4d6f9","name":"check status","fullName":"test_main#test_check_status","historyId":"6d350567970c7950561cd330fc37bf0e","time":{"start":1691803666087,"stop":1691803666087,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","statusTrace":"file /Users/whisper22x/program/InterfaceAuto/test_main.py, line 258\n  @allure.title(\"check status\")\n  def test_check_status(swapId):\nE       fixture 'swapId' not found\n>       available fixtures: __pytest_repeat_step_number, _verify_url, anyio_backend, anyio_backend_name, anyio_backend_options, base_url, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_class_tasks, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, depends_on_current_app, doctest_namespace, extra, include_metadata_in_junit_xml, metadata, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/Users/whisper22x/program/InterfaceAuto/test_main.py:258","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1691803666059,"stop":1691803666059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1691803666059,"stop":1691803666059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"test_main"},{"name":"host","value":"Whisper22XdeMacBook-Air.local"},{"name":"thread","value":"70023-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1b1d8c67bfe41432","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691803642750,"stop":1691803642750,"duration":0}},{"uid":"3396d13b7bcc075","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691803619196,"stop":1691803619196,"duration":0}},{"uid":"e1abdbc63b62deac","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691803595539,"stop":1691803595539,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9ddde7a6dcf4d6f9.json","parameterValues":[]}