{"uid":"57434a6d101a7ec6","name":"check status","fullName":"test_main.TestApi#test_check_status","historyId":"e71b2bbf3424eb005861a8c8343e87e4","time":{"start":1691742583317,"stop":1691742583317,"duration":0},"status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","statusTrace":"file /Users/whisper22x/program/InterfaceAuto/test_main.py, line 188\n      @allure.title(\"check status\")\n      def test_check_status(self, swapId):\nE       fixture 'swapId' not found\n>       available fixtures: __pytest_repeat_step_number, _verify_url, anyio_backend, anyio_backend_name, anyio_backend_options, base_url, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_class_tasks, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, depends_on_current_app, doctest_namespace, extra, include_metadata_in_junit_xml, metadata, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/Users/whisper22x/program/InterfaceAuto/test_main.py:188","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":11,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1691742581811,"stop":1691742581811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_verify_url","time":{"start":1691742581811,"stop":1691742581811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"feature","value":"test-mesonfi-api"},{"name":"suite","value":"test_main"},{"name":"subSuite","value":"TestApi"},{"name":"host","value":"Whisper22XdeMacBook-Air.local"},{"name":"thread","value":"65640-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eaa5fb43e3b80121","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691741642083,"stop":1691741642083,"duration":0}},{"uid":"ef51dada1d6cbe82","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691741502723,"stop":1691741502723,"duration":0}},{"uid":"b99432bd2a002376","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691741039245,"stop":1691741039245,"duration":0}},{"uid":"da10234cf2c7c140","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740757821,"stop":1691740757821,"duration":0}},{"uid":"a66893be318325de","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740688416,"stop":1691740688416,"duration":0}},{"uid":"ba0d6cfe7be56eda","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740585740,"stop":1691740585740,"duration":0}},{"uid":"89027a00e5f03898","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740568762,"stop":1691740568762,"duration":0}},{"uid":"77b82b04fd3705d1","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740488851,"stop":1691740488851,"duration":0}},{"uid":"d5d357939cd00afd","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691740100412,"stop":1691740100412,"duration":0}},{"uid":"faafd1966a4f2418","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691739700275,"stop":1691739700275,"duration":0}},{"uid":"9e08d384b1f54bd8","status":"broken","statusDetails":"_pytest.fixtures.FixtureLookupError: ('swapId', <FixtureRequest for <Function test_check_status>>)","time":{"start":1691734210978,"stop":1691734210978,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"57434a6d101a7ec6.json","parameterValues":[]}